{"pages":[{"title":"404","text":"","path":"404/index.html","date":"01-04","excerpt":""},{"title":"about","text":"","path":"about/index.html","date":"01-04","excerpt":""},{"title":"categories","text":"","path":"categories/index.html","date":"01-04","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"01-04","excerpt":""},{"title":"tags","text":"","path":"tags/index.html","date":"01-04","excerpt":""}],"posts":[{"title":"JavaScript 简答题","text":"请描述一下cookies，sessionStorage和localStorage的区别？sessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。 web storage和cookie的区别Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用。除此之外，Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生。 看下列代码输出为何？解释原因。123var a;alert(typeof a); // undefinedalert(b); // 报错 用js实现随机选取10–100之间的10个数字，存入一个数组，并排序。1234567891011121314151617181920212223function randomNub(aArray, len, min, max) &#123; if (len &gt;= (max - min)) &#123; return '超过' + min + '-' + max + '之间的个数范围' + (max - min - 1) + '个的总数'; &#125; if (aArray.length &gt;= len) &#123; aArray.sort(function(a, b) &#123; return a - b &#125;); return aArray; &#125; var nowNub = parseInt(Math.random() * (max - min - 1)) + (min + 1); for (var j = 0; j &lt; aArray.length; j++) &#123; if (nowNub == aArray[j]) &#123; randomNub(aArray, len, min, max); return; &#125; &#125; aArray.push(nowNub); randomNub(aArray, len, min, max); return aArray; &#125;var arr=[];randomNub(arr,10,10,100); 如何阻止事件冒泡和默认事件阻止事件冒泡：1234.stopPropagation();// 阻止默认事件return false;.preventDefault(); JavaScript的数据类型都有什么？看下列代码，将会输出什么?(变量声明提升)123456var foo = 1;(function()&#123; console.log(foo); // undefined var foo = 2; console.log(foo); // 2&#125;)() 怎样添加、移除、移动、复制、创建和查找节点。正则表达式构造函数var reg=new RegExp(“xxx”)与正则表达字面量var reg=//有什么不同？匹配邮箱的正则表达式？当使用RegExp()构造函数的时候，不仅需要转义引号（即\\”表示”），并且还需要双反斜杠（即\\表示一个\\）。使用正则表达字面量的效率更高。邮箱的正则匹配： var regMail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/; 一个完整的URL有哪几部分组成？请求消息和相应消息分别有哪几本部分组成？HTTP协议的工作原理？HTTP请求的方式有几种？分别表示什么意义？有 8 种；HTTP 1.0 提供了 GET，POST，HEAD；HTTP 1.1 有新增了 OPTIONS，PUT，DELETE，CONNECT，TRACE Ajax 的作用是什么? 如何创建一个Ajax？作用：用于浏览器与服务器进行数据交互，实现页面的局部刷新。 ######## 创建一个Ajax请求：12345678Var request = XMLHttpRequest();request.open(‘POST’, url, true); // 默认是异步请求request.onreadystatechange = function()&#123;&#125;;// 设置请求头request.setRequestHeader(‘Content-Type’, ‘application/x-www-form-urlencoded’);request.send(null); 举例描述同步和异步的区别？请简述一下什么是同源策略？同源策略浏览器采用同源策略，禁止页面加载或执行与自身来源不同的域的任何脚本。换句话说浏览器禁止的是来自不同源的”document”或脚本，对当前”document”读取或设置某些属性。 什么是同源URL由协议、域名、端口和路径组成，如果两个URL的协议、域名和端口相同，则表示他们同源。相反，只要协议，域名，端口有任何一个的不同，就被当作是跨域。 如何解决跨域问题？1.JSONP2.通过服务器进行设置3.使用代理服务器 请简述GET和POST请求的区别，以及它们的使用场景？安全性GET 请求会将传输数据拼接在 URL 中，并显示在浏览器地址栏中。而POST相对来说比较安全，传输的数据会被放到请求体中。 传输速度GET请求会被POST请求快一些。 传输数据量GET请求能传输的数据量比较小，因不同的浏览器而有所不同，大概 4KB左右；而POST请求能传输的数据理论上没有上限的，但由于服务器硬件资源的限制，能传输的数据量也会受影响。有时候服务器的设置也会影响能传输的数据量。 在进行Ajax请求时，如何解析请求返回的json数据使用JSON.parse()方法将json格式的字符串转换成对象（Array或Object）列举出你学过的JavaScript本地对象，内置对象和宿主对象本地对象：Object, Array,Date内置对象：global,Math宿主对象：DOM，BOM 请分别描述引用类型的数据和基本类型的数据在内存中的存储方式？基本类型的数据直接存储在变量的存储空间中；而引用类型的数据并没直接存储在变量的存储空间中，变量中存储的只是引用类型数据所在的内存地址。 在使用new操作符调用函数时，具体发生了什么事（new操作符的作用）?当我们使用 new 操作符调用函数时，函数内部会自动创建一个该类型的新对象，新对象的原型指向构造函数的prototype属性。当函数调用完成时，该对象会被自动的返回到函数外部。我们可以在函数内部通过 this 关键字使用新创建的对象。 对象的属性有几种类型？怎么定义这些属性？有 2 种，分别是：数据属性和访问器属性；定义属性的方式如下：123456789101112131415161718192021Var obj1 = &#123;Name: ‘张铭恩’Age: 20,Get adult() &#123;Return this.age &gt;= 18 ? true : false;&#125;&#125;Var obj2 = &#123;Name: ‘张铭恩’Age: 20,Count: 20000Get money() &#123;Return this.count / 100;&#125;,Set money(income) &#123;This.count = this.count + income * 100;&#125;&#125;Obj2.money; // 200;// 收入300Obj2.money = 300; 属性的特性有哪些？分别代表什么意思？数据属性的特性：value 属性值Writable 是否可以修改Enumerable 是否可以枚举Configurable 是否可以删除访问器属性的特性：Get 是否可以访问Set 是否可以修改Enumerable 是否可以枚举Configurable 是否可以删除 怎样获取属性的特性？怎样设置属性的特性？获取属性的特性：getOwnPropertyDescriptor()getOwnPropertyDescriptors()设置属性的特性:defineProperty()defineProperties() 怎样封印、冻结和禁止对象扩展？禁止扩展：preventExtensions();封印对象：seal()冻结对象：freeze()被禁止扩展对象、被封印对象和被冻结对象有什么特点？被禁止扩展对象的特点： 不能添加新属性（不可扩展） 可以删除已有属性 可以修改已有属性的值 被封印对象的特点： 不能添加新属性（不可扩展） 不能删除已有属性 可以修改已有属性的值被冻结对象的特点： 不能添加新属性（不可扩展） 不能删除已有属性 不能修改已有属性的值请简述对象属性的查找顺序？当我方法对象的属性时，JavaScript引擎首先会去对象自身的属性列表种查询，如果有，则返回；如果没有，则沿着原型对象链向下寻找。如果整个原型对象链中都没有，则返回 undefined。对象的继承方式有几种？请分别编程实现：3 种，分别是：原型对象继承、对象继承、构造函数继承；12345678910111213141516171819202122232425262728293031323334原型继承（JS默认继承方式）：function Rectangle(w, h)&#123;this.width = w;this.height = h;&#125;var rect = new Rectangle(40, 20);rect 对象默认继承了 Rectangle.prototype，间接继承了 Object.prototype。对象继承：var obj1 = &#123;...&#125;;var obj2 = Object.create(obj1, &#123;...&#125;);obj2 继承了 obj1，obj1继承 Object.prototype。构造函数继承：function Rectangle(w, h)&#123;this.width = w;this.height = h;&#125;Object.defineProperty(Rectangle.prototype, ‘getArea’, &#123;value: function()&#123;return this.width * this.height;&#125;Writable: false,Enumerable: false,Configurable: false&#125;);function Square(w)&#123;this.width = w;this.height = w;&#125;Square.prototype = Object.create(new Rectangle(), &#123;constructor: &#123;value: Square,configurable: false,enumerable: false,writable: false&#125;&#125;&#125;;","path":"2019/01/04/JavaScript-简答题/","date":"01-04","excerpt":"","tags":[]},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2019/01/04/hello-world/","date":"01-04","excerpt":"","tags":[]}]}